#
# wm independent hotkeys
#

# Switch wallpaper mode
super + shift + w
    mode=`cat $HOME/.config/bspwm/wallpaper_mode.txt`; \
    if [ $mode = "A" ]; \
    then \
        notify-send "System" "Changing to static wallpaper"; \
        echo "S" > $HOME/.config/bspwm/wallpaper_mode.txt; \
        killall xwinwrap; \
    else \
        killall feh; \
        notify-send "System" "Changing to animated wallpaper"; \
        echo "A" > $HOME/.config/bspwm/wallpaper_mode.txt; \
        xwinwrap -fs -fdt -ni -b -nf -- \
             mpv -no-audio --hwdec=vaapi --loop -wid %WID $HOME/dotties/assets/hosf_trim.mp4 & ; \
    fi

# clipboard
super + v
    rofi -modi "clipboard:greenclip print" -show clipboard -run-command '{cmd}'

# terminal emulator
super + Return
	kitty

# program launcher
super + r
	rofi -show drun

# emoji picker
super + e
    rofi -modi emoji -show emoji

# The button at top right corner
super + shift + r
    $HOME/.config/rofi/powermenu.sh

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd && \
    notify-send "Keybind" "Reset all keybinds" --expire-time=500

# https://github.com/flameshot-org/flameshot/issues/784#issuecomment-918382722
Print
    flameshot full --clipboard

super + shift + s
    flameshot gui

@XF86AudioMute
    pactl set-sink-mute @DEFAULT_SINK@ toggle;
    notify-send "Audio" "Switching mute status" --expire-time=500

@XF86Audio{Raise,Lower}Volume
    stat=$(pactl get-sink-volume @DEFAULT_SINK@ | awk '\{printf substr($5,1,3)\}' | sed 's/%//g') && \
    pactl set-sink-volume @DEFAULT_SINK@ {+,-}1% && \
    notify-send "Audio" "Volume set at $((stat {+,-} 1))%" --expire-time=500 -u low -h int:value:$stat -h string:synchronous:volumectrl
    
@XF86AudioPlay
    playerctl play-pause && notify-send "Audio" "Toggled playback status" --expire-time=500

@XF86AudioStop
    playerctl stop && notify-send "Audio" "Stopped playback" --expire-time=500

@XF86Audio{Prev,Next}
    playerctl {previous,next} && notify-send "Playback" "Switching track" --expire-time=500

@XF86MonBrightness{Down,Up}
    xbacklight -{inc,dec} 5
    
#
# bspwm hotkeys
#

# quit/restart bspwm
super + alt + {q,r}
	bspc {quit,wm -r} && notify-send "BSPWM" "Resetting the WM" --expire-time=500;

# close and kill
super + {_,shift + }w
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest window
super + g
	bspc node -s biggest.window

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous window in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local.!hidden.window

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# shrink a window by moving one of its side inward
super + ctrl + alt + {l,k,j,h}
	bspc node -z {left 20 0,bottom 0 -20,top 0 20,right -20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}
